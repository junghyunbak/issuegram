name: ci/cd pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_lint:
    runs-on: ubuntu-latest
    steps:
      - name: 📥저장소의 코드 가져오기
        uses: actions/checkout@v3

      - name: 🏷노드 버전 설정
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1

      - name: 🐈yarn 설치
        run: npm i -g yarn

      - name: 🐈yarn 캐시 디렉터리 경로 얻기
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: 🐈yarn 캐싱
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦패키지 설치 (캐시되지 않았을 경우)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: 🌳환경변수 설정
        run: echo "${{ secrets.PROD_ENV_PROPERTIES }}" > ./.env

      - name: 📩환경변수 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.RELEASE_HOST}}
          username: ${{ secrets.RELEASE_USERNAME}}
          password: ${{ secrets.RELEASE_PASSWORD}}
          source: "./.env"
          target: "~/git-repo/issuegram"

      - name: 🧪lint 테스트
        run: yarn lint
        continue-on-error: true

      - name: 🧪build 테스트
        run: yarn build
        continue-on-error: true

  deploy_master:
    needs: build_and_lint
    runs-on: ubuntu-latest

    if: ${{ needs.build_and_lint.result == 'suceess' }}

    steps:
      - name: 🖥서버 접속 및 스크립트 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_HOST }}
          username: ${{ secrets.RELEASE_USERNAME }}
          password: ${{ secrets.RELEASE_PASSWORD }}
          script: |
            cd ./git-repo/issuegram

            git clean -fd
            git checkout master
            git pull origin master

            ./docker/build-and-run.sh
